# Santander Dev Week 2023 (ETL com Python)

**Contexto:** Você é um cientista de dados no Santander e recebeu a tarefa de envolver seus clientes de maneira mais personalizada. Seu objetivo é usar o poder da IA Generativa para criar mensagens de marketing personalizadas que serão entregues a cada cliente.

**Condições do Problema:**

1. Você recebeu uma planilha simples, em formato CSV ('SDW2023.csv'), com uma lista de IDs de usuário do banco:
  ```
  UserID
  1
  2
  3
  4
  5
  ```
2. Seu trabalho é consumir o endpoint `GET https://sdw-2023-prd.up.railway.app/users/{id}` (API da Santander Dev Week 2023) para obter os dados de cada cliente.
3. Depois de obter os dados dos clientes, você vai usar a API do ChatGPT (OpenAI) para gerar uma mensagem de marketing personalizada para cada cliente. Essa mensagem deve enfatizar a importância dos investimentos.
4. Uma vez que a mensagem para cada cliente esteja pronta, você vai enviar essas informações de volta para a API, atualizando a lista de "news" de cada usuário usando o endpoint `PUT https://sdw-2023-prd.up.railway.app/users/{id}`.

User ID
3459
3460
3420

# Utilize sua própria URL se quiser ;)
# Repositório da API: https://github.com/digitalinnovationone/santander-dev-week-2023-api
sdw2023_api_url = 'https://sdw-2023-prd.up.railway.app'

## **E**xtract

Extraia a lista de IDs de usuário a partir do arquivo CSV. Para cada ID, faça uma requisição GET para obter os dados do usuário correspondente.

import pandas as pd 

df = pd.read_csv('SDW2023.csv.txt')
user_ids = df['UserID'].tolist()
print(user_ids)

import requests
import json

def get_user(id):
  response = requests.get(f'{sdw2023_api_url}/users/{id}')
  return response.json() if response.status_code == 200 else None

users = [user for id in user_ids if (user := get_user(id)) is not None]
print(json.dumps(users, indent=2))

[
  {
    "id": 3459,
    "name": "Byttters",
    "account": {
      "id": 3677,
      "number": "00323",
      "agency": "0072-3",
      "balance": 154.0,
      "limit": 355.0
    },
    "card": {
      "id": 3355,
      "number": "1995 2399 2581 1236",
      "limit": 1550.0
    },
    "features": [
      {
        "id": 1088,
        "icon": "string",
        "description": "string"
      }
    ],
    "news": [
      {
        "id": 7063,
        "icon": "string",
        "description": "string"
      }
    ]
  },
  {
    "id": 3460,
    "name": "Pxes",
    "account": {
      "id": 3678,
      "number": "00723",
      "agency": "0012-3",
      "balance": 159.0,
      "limit": 358.0
    },
    "card": {
      "id": 3356,
      "number": "1960 2009 2581 1236",
      "limit": 1555.0
    },
    "features": [
      {
        "id": 1089,
        "icon": "string",
        "description": "string"
      }
    ],
    "news": [
      {
        "id": 7064,
        "icon": "string",
        "description": "string"
      }
    ]
  },
  {
    "id": 3420,
    "name": "Paquisteck",
    "account": {
      "id": 3643,
      "number": "00123",
      "agency": "0082-3",
      "balance": 150.0,
      "limit": 350.0
    },
    "card": {
      "id": 3316,
      "number": "1735 2399 2581 1236",
      "limit": 1500.0
    },
    "features": [
      {
        "id": 1078,
        "icon": "string",
        "description": "string"
      }
    ],
    "news": [
      {
        "id": 6892,
        "icon": "string",
        "description": "string"
      }
    ]
  }
]


## **T**ransform

Utilize a API do OpenAI GPT-4 para gerar uma mensagem de marketing personalizada para cada usuário.

!pip install openai

# Documentação Oficial da API OpenAI: https://platform.openai.com/docs/api-reference/introduction
# Informações sobre o Período Gratuito: https://help.openai.com/en/articles/4936830

# Para gerar uma API Key:
# 1. Crie uma conta na OpenAI
# 2. Acesse a seção "API Keys"
# 3. Clique em "Create API Key"
# Link direto: https://platform.openai.com/account/api-keys

# Substitua o texto TODO por sua API Key da OpenAI, ela será salva como uma variável de ambiente.
openai_api_key = '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'

import openai

openai.api_key = openai_api_key

def generate_ai_news(user):
  completion = openai.ChatCompletion.create(
    model="gpt-3.5-turbo",
    messages=[
      {
          "role": "system",
          "content": "Você é um especialista em markting bancário."
      },
      {
          "role": "user",
          "content": f"Crie uma mensagem para {user['name']} sobre a importância dos investimentos (máximo de 100 caracteres)"
      }
    ]
  )
  return completion.choices[0].message.content.strip('\"')

for user in users:
  news = generate_ai_news(user)
  print(news)
  user['news'].append({
      "icon": "https://digitalinnovationone.github.io/santander-dev-week-2023-api/icons/credit.svg",
      "description": news
  })

Invista e faça seu dinheiro trabalhar por você!
Invista no seu futuro financeiro com a Pxes.
Invista no seu futuro financeiro!

## **L**oad

Atualize a lista de "news" de cada usuário na API com a nova mensagem gerada.

def update_user(user):
  response = requests.put(f"{sdw2023_api_url}/users/{user['id']}", json=user)
  return True if response.status_code == 200 else False

for user in users:
  success = update_user(user)
  print(f"User {user['name']} updated? {success}!")

User Byttters updated? True!
User Pxes updated? True!
User Paquisteck updated? True!
